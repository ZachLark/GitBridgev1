{
  "policy_metadata": {
    "policy_id": "diagnostic_policy_003",
    "version": "1.0.0",
    "created_at": "2025-06-10T17:48:00.000Z",
    "profile_type": "diagnostic",
    "description": "Comprehensive diagnostic profile for troubleshooting with extensive logging and monitoring",
    "__comment": "Diagnostic profile maximizes observability for debugging and system analysis"
  },
  
  "execution_profile": {
    "name": "diagnostic",
    "priority": 5,
    "timeout_seconds": 600,
    "max_concurrent_tasks": 5,
    "memory_limit_mb": 1024,
    "enable_debug": true,
    "__comment": "Extended execution limits with full debug capabilities for thorough analysis"
  },
  
  "routing": {
    "primary_model": {
      "model_id": "gpt-4o-diagnostic",
      "provider": "openai",
      "timeout_seconds": 180,
      "confidence_threshold": 0.80,
      "max_tokens": 8192,
      "temperature": 0.0
    },
    "fallback_chain": [
      {
        "model_id": "claude-3-opus-diagnostic",
        "provider": "anthropic",
        "timeout_seconds": 150,
        "confidence_threshold": 0.75,
        "max_tokens": 8192,
        "temperature": 0.0,
        "fallback_conditions": ["timeout", "low_confidence", "error", "rate_limit"],
        "priority": 1
      },
      {
        "model_id": "local-diagnostic-model",
        "provider": "local",
        "timeout_seconds": 120,
        "confidence_threshold": 0.70,
        "max_tokens": 4096,
        "temperature": 0.0,
        "fallback_conditions": ["timeout", "error", "unavailable"],
        "priority": 2
      }
    ],
    "selection_strategy": "balanced",
    "load_balancing": {
      "enabled": false,
      "algorithm": "weighted",
      "weights": {}
    },
    "__comment": "Diagnostic routing emphasizes consistency and deterministic outputs for analysis"
  },
  
  "fallbacks": {
    "escalation_thresholds": {
      "confidence_threshold": 0.70,
      "timeout_threshold": 600,
      "error_rate_threshold": 0.05,
      "latency_threshold_ms": 15000
    },
    "retry_policy": {
      "max_retries": 8,
      "base_delay_ms": 2000,
      "backoff_multiplier": 2.5,
      "jitter_enabled": true
    },
    "circuit_breaker": {
      "failure_threshold": 2,
      "recovery_timeout_ms": 60000,
      "half_open_max_calls": 1
    },
    "__comment": "Aggressive retry policy with extended delays for thorough diagnostic attempts"
  },
  
  "uid_lineage": {
    "threading_strategy": "hierarchical",
    "lineage_depth": 15,
    "uid_format": {
      "pattern": "{timestamp}_{entropy}_{agent_id}_{sequence}_{parent_ref}",
      "components": ["timestamp", "entropy", "agent_id", "sequence", "parent_ref"],
      "separator": "_"
    },
    "persistence": {
      "enabled": true,
      "storage_backend": "redis",
      "retention_hours": 2160
    },
    "__comment": "Deep lineage tracking with 90-day retention for comprehensive diagnostic history"
  },
  
  "logging": {
    "level": "DEBUG",
    "format": "json",
    "outputs": [
      {
        "type": "file",
        "enabled": true,
        "path": "/logs/diagnostic/smartrepo_diagnostic.log",
        "rotation": {
          "enabled": true,
          "max_size_mb": 200,
          "backup_count": 100
        }
      },
      {
        "type": "console",
        "enabled": true
      },
      {
        "type": "redis",
        "enabled": true
      },
      {
        "type": "syslog",
        "enabled": true
      }
    ],
    "fields": {
      "include_timestamp": true,
      "include_thread_id": true,
      "include_process_id": true,
      "include_uid_lineage": true,
      "mas_lite_compliance": true
    },
    "__comment": "Maximum logging verbosity across all output channels for comprehensive diagnostics"
  },
  
  "output": {
    "format": {
      "type": "json",
      "encoding": "utf-8",
      "pretty_print": true,
      "compression": {
        "enabled": false,
        "algorithm": "gzip"
      }
    },
    "delivery": {
      "method": "synchronous",
      "reliability": "exactly_once",
      "batch_size": 1,
      "flush_interval_ms": 0
    },
    "validation": {
      "enabled": true,
      "schema_validation": true,
      "checksum_enabled": true,
      "mas_lite_compliance": true
    },
    "__comment": "Synchronous delivery with full validation and pretty printing for diagnostic readability"
  }
} 